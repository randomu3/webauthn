<?php
/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * –∏ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–∞–±–ª–∏—Ü
 */

// –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑—á–∏–∫–∞
require_once __DIR__ . '/../src/Database.php';

use WebAuthn\Database;

echo "üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n\n";

try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    $db = new Database();
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ\n";
    
    $pdo = $db->getPdo();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    $tables = [
        'users' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
        'user_credentials' => '–£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ WebAuthn',
        'user_sessions' => '–°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        'device_fingerprints' => '–û—Ç–ø–µ—á–∞—Ç–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤'
    ];
    
    echo "\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:\n";
    
    foreach ($tables as $table => $description) {
        $stmt = $pdo->query("SHOW TABLES LIKE '{$table}'");
        
        if ($stmt->fetch()) {
            echo "‚úÖ –¢–∞–±–ª–∏—Ü–∞ '{$table}' ({$description}) - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n";
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            $stmt = $pdo->prepare("DESCRIBE `{$table}`");
            $stmt->execute();
            $columns = $stmt->fetchAll();
            
            echo "   –ö–æ–ª–æ–Ω–∫–∏: ";
            $columnNames = array_map(function($col) { return $col['Field']; }, $columns);
            echo implode(', ', $columnNames) . "\n";
        } else {
            echo "‚ùå –¢–∞–±–ª–∏—Ü–∞ '{$table}' ({$description}) - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n";
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –≤ —Ç–∞–±–ª–∏—Ü–µ users
    echo "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤:\n";
    $stmt = $pdo->prepare("SHOW INDEX FROM users");
    $stmt->execute();
    $indexes = $stmt->fetchAll();
    
    foreach ($indexes as $index) {
        echo "   - {$index['Key_name']} –Ω–∞ –∫–æ–ª–æ–Ω–∫–µ {$index['Column_name']}\n";
    }
    
    // –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    echo "\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ë–î:\n";
    
    $testUserId = 'test_user_' . time();
    $testUserHandle = random_bytes(32);
    
    if ($db->createUser($testUserId, $testUserHandle)) {
        echo "‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
        
        $user = $db->getUser($testUserId);
        if ($user) {
            echo "‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
            echo "   ID: {$user['user_id']}\n";
            echo "   –°–æ–∑–¥–∞–Ω: {$user['created_at']}\n";
        } else {
            echo "‚ùå –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
        }
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $stmt = $pdo->prepare("DELETE FROM users WHERE user_id = ?");
        $stmt->execute([$testUserId]);
        echo "üóëÔ∏è  –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω\n";
        
    } else {
        echo "‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    echo "\n‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n";
    echo "   –•–æ—Å—Ç: " . ($_ENV['DB_HOST'] ?? 'db') . "\n";
    echo "   –ë–∞–∑–∞: " . ($_ENV['DB_NAME'] ?? 'webauthn_db') . "\n";
    echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " . ($_ENV['DB_USER'] ?? 'webauthn_user') . "\n";
    
    echo "\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!\n";
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
    echo "\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n";
    echo "   - –ó–∞–ø—É—â–µ–Ω –ª–∏ MySQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: docker-compose ps\n";
    echo "   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ\n";
    echo "   - –õ–æ–≥–∏ MySQL: docker-compose logs db\n";
    exit(1);
}
