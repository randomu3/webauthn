<?php
// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

require_once __DIR__ . '/../src/DeviceHelper.php';
use WebAuthn\DeviceHelper;

$isMobile = DeviceHelper::isMobileDevice();
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ù–ü–§ –°—É—Ä–≥—É—Ç–Ω–µ—Ñ—Ç–µ–≥–∞–∑ - –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</title>
    <link rel="stylesheet" href="css/styles.css">
    <link rel="stylesheet" href="css/npf-theme.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <div class="container">
        <div class="main-container">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è -->
            <div class="app-header">
                <div class="app-logo">üè¢</div>
                <div class="app-title">–ù–ü–§ –°—É—Ä–≥—É—Ç–Ω–µ—Ñ—Ç–µ–≥–∞–∑</div>
                <div class="app-subtitle">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç<br>–ù–µ–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥</div>
            </div>

            <!-- –°—Ç–∞—Ç—É—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ -->
            <div class="device-status <?php echo $isMobile ? 'mobile' : 'desktop'; ?>">
                <?php if ($isMobile): ?>
                    üì± <strong>–ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</strong><br>
                    –î–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                <?php else: ?>
                    üíª <strong>–ù–∞—Å—Ç–æ–ª—å–Ω—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä</strong><br>
                    WebAuthn –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ Tuna tunnel
                <?php endif; ?>
            </div>

            <!-- –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ -->
            <div class="demo-info">
                <h4>üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:</h4>
                <p><strong>–õ–æ–≥–∏–Ω:</strong> testuser</p>
                <p><strong>–ü–∞—Ä–æ–ª—å:</strong> password123</p>
                <p><em>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è" –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞</em></p>
            </div>

            <!-- –¢–∞–±—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ remember token) -->
            <div class="auth-tabs" id="authTabs">
                <div class="auth-tab active" data-tab="password">
                    üîê –õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
                </div>
                <div class="auth-tab" data-tab="quick" style="display: none;">
                    ‚ö° –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥
                </div>
            </div>

            <!-- –°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è -->
            <div id="status" class="status hidden"></div>

            <!-- –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –ø–æ –ª–æ–≥–∏–Ω—É –∏ –ø–∞—Ä–æ–ª—é -->
            <div id="passwordForm" class="auth-form active">
                <div class="form-group">
                    <label for="username">–õ–æ–≥–∏–Ω –∏–ª–∏ Email:</label>
                    <input type="text" id="username" name="username" required 
                           placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏–ª–∏ email" autocomplete="username">
                </div>

                <div class="form-group">
                    <label for="password">–ü–∞—Ä–æ–ª—å:</label>
                    <input type="password" id="password" name="password" required 
                           placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" autocomplete="current-password">
                </div>

                <div class="remember-me">
                    <input type="checkbox" id="rememberMe" name="remember_me">
                    <label for="rememberMe">–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞</label>
                </div>

                <button type="button" id="loginBtn" class="btn-primary">
                    –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                </button>
            </div>

            <!-- –§–æ—Ä–º–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ remember token) -->
            <div id="quickForm" class="auth-form" style="display: none;">
                <div class="quick-access">
                    <div class="quick-access-title">‚ö° –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥</div>
                    
                    <div id="userWelcome">
                        <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <span id="userDisplayName"></span>!</p>
                    </div>
                    
                    <div class="pin-input-container">
                        <label>–í–≤–µ–¥–∏—Ç–µ 6-–∑–Ω–∞—á–Ω—ã–π PIN –∫–æ–¥:</label>
                        <div class="pin-input-group">
                            <input type="number" class="pin-digit" maxlength="1" pattern="[0-9]" data-index="0" readonly>
                            <input type="number" class="pin-digit" maxlength="1" pattern="[0-9]" data-index="1" readonly>
                            <input type="number" class="pin-digit" maxlength="1" pattern="[0-9]" data-index="2" readonly>
                            <input type="number" class="pin-digit" maxlength="1" pattern="[0-9]" data-index="3" readonly>
                            <input type="number" class="pin-digit" maxlength="1" pattern="[0-9]" data-index="4" readonly>
                            <input type="number" class="pin-digit" maxlength="1" pattern="[0-9]" data-index="5" readonly>
                        </div>

                        <!-- –ú–æ–±–∏–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ -->
                        <div class="mobile-keypad">
                            <button class="keypad-btn" data-digit="1">1</button>
                            <button class="keypad-btn" data-digit="2">2</button>
                            <button class="keypad-btn" data-digit="3">3</button>
                            <button class="keypad-btn" data-digit="4">4</button>
                            <button class="keypad-btn" data-digit="5">5</button>
                            <button class="keypad-btn" data-digit="6">6</button>
                            <button class="keypad-btn" data-digit="7">7</button>
                            <button class="keypad-btn" data-digit="8">8</button>
                            <button class="keypad-btn" data-digit="9">9</button>
                            <button class="keypad-btn special" data-action="clear">‚å´</button>
                            <button class="keypad-btn" data-digit="0">0</button>
                            <button class="keypad-btn special" data-action="login">‚úì</button>
                        </div>
                        
                        <button type="button" id="quickLoginBtn" class="btn-primary" disabled>
                            –í–æ–π—Ç–∏ –ø–æ PIN
                        </button>
                    </div>

                    <div id="webauthnSection" style="display: none;">
                        <button type="button" id="webauthnBtn" class="btn-secondary">
                            üëÜ –í–æ–π—Ç–∏ –ø–æ –æ—Ç–ø–µ—á–∞—Ç–∫—É –ø–∞–ª—å—Ü–∞
                        </button>
                    </div>
                </div>

                <button type="button" class="btn-secondary" onclick="switchTab('password')">
                    üîë –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
                </button>
            </div>

            <!-- Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
            <div id="debug" class="debug hidden"></div>
        </div>
    </div>

    <script>
        let currentQuickUser = null;
        let currentPin = '';

        $(document).ready(function() {
            // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º –±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å remember token)
            disableQuickLogin();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º remember token –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
            checkRememberToken();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            setupEventHandlers();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            setupMobileKeypad();
        });

        function setupEventHandlers() {
            // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤
            $('.auth-tab').on('click', function() {
                const tab = $(this).data('tab');
                switchTab(tab);
            });
            
            // –û–±—ã—á–Ω—ã–π –≤—Ö–æ–¥
            $('#loginBtn').on('click', handleLogin);
            $('#quickLoginBtn').on('click', handleQuickLogin);
            $('#webauthnBtn').on('click', handleWebAuthnLogin);
            
            // Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
            $('#passwordForm input').on('keypress', function(e) {
                if (e.which === 13) {
                    handleLogin();
                }
            });
        }

        function setupMobileKeypad() {
            $('.keypad-btn').on('click', function() {
                const digit = $(this).data('digit');
                const action = $(this).data('action');
                
                if (digit !== undefined) {
                    addDigitToPin(digit.toString());
                } else if (action === 'clear') {
                    clearLastDigit();
                } else if (action === 'login') {
                    handleQuickLogin();
                }
                
                // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                $(this).addClass('active');
                setTimeout(() => $(this).removeClass('active'), 150);
            });
        }

        function addDigitToPin(digit) {
            if (currentPin.length < 6) {
                currentPin += digit;
                updatePinDisplay();
                updateQuickLoginButton();
            }
        }

        function clearLastDigit() {
            if (currentPin.length > 0) {
                currentPin = currentPin.slice(0, -1);
                updatePinDisplay();
                updateQuickLoginButton();
            }
        }

        function updatePinDisplay() {
            $('.pin-digit').each(function(index) {
                const $input = $(this);
                if (index < currentPin.length) {
                    $input.val(currentPin[index]).addClass('filled');
                } else {
                    $input.val('').removeClass('filled');
                }
            });
        }

        function updateQuickLoginButton() {
            $('#quickLoginBtn').prop('disabled', currentPin.length !== 6);
        }

        function switchTab(tab) {
            $('.auth-tab').removeClass('active');
            $(`.auth-tab[data-tab="${tab}"]`).addClass('active');
            
            $('.auth-form').removeClass('active');
            $(`#${tab}Form`).addClass('active');
            
            clearStatus();
            
            if (tab === 'quick' && !currentQuickUser) {
                checkRememberToken();
            }
        }

        function checkRememberToken() {
            $.ajax({
                url: 'auth_api.php?action=check-remember',
                method: 'POST',
                contentType: 'application/json',
                success: function(response) {
                    if (response.success && response.quick_login_available) {
                        currentQuickUser = response;
                        enableQuickLogin(response);
                    } else {
                        disableQuickLogin();
                    }
                },
                error: function() {
                    disableQuickLogin();
                }
            });
        }

        function enableQuickLogin(userData) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–± –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞
            $('.auth-tab[data-tab="quick"]').show();
            $('#authTabs').removeClass('single-tab');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞
            $('#quickForm').show();
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            $('#userWelcome').show();
            $('#userDisplayName').text(userData.display_name || userData.username);
            
            if (userData.webauthn_enabled) {
                $('#webauthnSection').show();
            }
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥
            switchTab('quick');
            
            showStatus('üöÄ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤—Ö–æ–¥!', 'success');
        }

        function disableQuickLogin() {
            // –°–∫—Ä—ã–≤–∞–µ–º —Ç–∞–± –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞
            $('.auth-tab[data-tab="quick"]').hide();
            $('#authTabs').addClass('single-tab');
            
            // –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞
            $('#quickForm').hide().removeClass('active');
            $('#userWelcome').hide();
            $('#webauthnSection').hide();
            currentQuickUser = null;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞
            $('#passwordForm').show().addClass('active');
            
            // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∞–∫—Ç–∏–≤–µ–Ω —Ç–∞–± –ø–∞—Ä–æ–ª—è
            $('.auth-tab').removeClass('active');
            $('.auth-tab[data-tab="password"]').addClass('active');
        }

        function handleLogin() {
            const username = $('#username').val().trim();
            const password = $('#password').val().trim();
            const rememberMe = $('#rememberMe').is(':checked');

            if (!username || !password) {
                showStatus('‚ùå –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å', 'error');
                return;
            }

            setLoading(true);
            showStatus('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö...', 'info');

            $.ajax({
                url: 'auth_api.php?action=login',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    username: username,
                    password: password,
                    remember_me: rememberMe
                }),
                success: function(response) {
                    if (response.success) {
                        showStatus('‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
                        
                        // –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                        if (response.remember_me_requested) {
                            // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è"
                            if (response.needs_pin_setup) {
                                // –ù—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å PIN –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞
                                setTimeout(() => {
                                    window.location.href = 'setup.html';
                                }, 1000);
                            } else {
                                // PIN —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –∏–¥–µ–º –≤ dashboard
                                setTimeout(() => {
                                    window.location.href = 'dashboard.html';
                                }, 1000);
                            }
                        } else {
                            // –û–±—ã—á–Ω—ã–π –≤—Ö–æ–¥ –±–µ–∑ "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è" - —Å—Ä–∞–∑—É –≤ dashboard
                            setTimeout(() => {
                                window.location.href = 'dashboard.html';
                            }, 1000);
                        }
                    } else {
                        showStatus('‚ùå ' + response.message, 'error');
                    }
                },
                error: function(xhr) {
                    const response = xhr.responseJSON || {};
                    showStatus('‚ùå ' + (response.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞'), 'error');
                },
                complete: function() {
                    setLoading(false);
                }
            });
        }

        function handleQuickLogin() {
            if (currentPin.length !== 6) {
                showStatus('‚ùå –í–≤–µ–¥–∏—Ç–µ 6-–∑–Ω–∞—á–Ω—ã–π PIN –∫–æ–¥', 'error');
                return;
            }

            if (!currentQuickUser) {
                showStatus('‚ùå –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞', 'error');
                switchTab('password');
                return;
            }

            setLoading(true);
            showStatus('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ PIN...', 'info');

            $.ajax({
                url: 'auth_api.php?action=login-pin',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    user_id: currentQuickUser.user_id,
                    pin: currentPin
                }),
                success: function(response) {
                    if (response.success) {
                        showStatus('‚úÖ –í—Ö–æ–¥ –ø–æ PIN –≤—ã–ø–æ–ª–Ω–µ–Ω!', 'success');
                        setTimeout(() => {
                            window.location.href = 'dashboard.html';
                        }, 1000);
                    } else {
                        if (response.error === 'WEBAUTHN_FAILED' || response.security_reset) {
                            // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≤—Ö–æ–¥
                            showStatus('üîí ' + response.message, 'error');
                            setTimeout(() => {
                                window.location.href = 'index.php';
                            }, 2000);
                        } else {
                            // –û–±—ã—á–Ω–∞—è –æ—à–∏–±–∫–∞ PIN
                            showStatus('‚ùå ' + response.error, 'error');
                            clearPin();
                        }
                    }
                },
                error: function(xhr) {
                    const response = xhr.responseJSON || {};
                    
                    if (xhr.status === 400 && response.message && response.message.includes('–ø–æ–ø—ã—Ç–æ–∫')) {
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ø—ã—Ç–æ–∫
                        showStatus('‚ö†Ô∏è ' + response.message, 'error');
                    } else if (response.security_reset) {
                        // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
                        showStatus('üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–±—Ä–æ—à–µ–Ω–∞. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.', 'error');
                        setTimeout(() => {
                            window.location.href = 'index.php';
                        }, 2000);
                    } else {
                        showStatus('‚ùå ' + (response.message || '–û—à–∏–±–∫–∞ PIN'), 'error');
                    }
                    
                    clearPin();
                },
                complete: function() {
                    setLoading(false);
                }
            });
        }

        function handleWebAuthnLogin() {
            showStatus('üîê WebAuthn –≤—Ö–æ–¥ –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω...', 'info');
            // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å WebAuthn API
        }

        function clearPin() {
            currentPin = '';
            updatePinDisplay();
            updateQuickLoginButton();
        }

        function showStatus(message, type = 'info') {
            $('#status')
                .removeClass('hidden success error info')
                .addClass(type)
                .text(message)
                .show();
        }

        function clearStatus() {
            $('#status').addClass('hidden');
        }

        function setLoading(loading) {
            if (loading) {
                $('#loginBtn').prop('disabled', true).text('‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...');
                $('#quickLoginBtn').prop('disabled', true).text('‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞...');
            } else {
                $('#loginBtn').prop('disabled', false).text('–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
                updateQuickLoginButton();
                $('#quickLoginBtn').text('–í–æ–π—Ç–∏ –ø–æ PIN');
            }
        }
    </script>
</body>
</html>